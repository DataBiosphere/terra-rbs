package bio.terra.rbs.db;

import bio.terra.rbs.generated.model.CloudResourceUid;
import com.google.auto.value.AutoValue;
import java.time.Instant;
import javax.annotation.Nullable;

/** Represents a record in the resource table in the RBS database. */
@AutoValue
public abstract class Resource {
  /** The unique id of the resources. Generated by RBS when creating the resource. */
  public abstract ResourceId id();

  /** The pool id the resources belongs to. */
  public abstract PoolId poolId();

  /**
   * The resource state. During resource creation, it is CREATING; when resource successfully created, it is READY;
   * After handed out to client, it is HANDED_OUT.
   */
  public abstract ResourceState state();

  /**
   * Represent the cloud resource in Terra. It will be empty until resource is successfully.
   *
   * TODO(yonghao): Investigate to have a TerraResourceUid to represent all Terra resources.
   */
  @Nullable
  public abstract CloudResourceUid cloudResourceUid();

  /**
   * The unique id from client when asking for resource. Using the same resource will get the same resource back.
   *  It is set when the resource is handed out.
   */
  @Nullable
  public abstract RequestHandoutId requestHandoutId();

  /**
   * The resource creation time. It is the time when we start creating the resources. The actual resource creation
   * finish time is later than that.
   */
  public abstract Instant creation();

  /** The time when RBS handed out resource to client. It is set when the resource is handed out. */
  @Nullable
  public abstract Instant handoutTime();

  public static Builder builder() {
    return new AutoValue_Resource.Builder();
  }

  public abstract Builder toBuilder();

  @AutoValue.Builder
  public abstract static class Builder {
    public abstract Builder id(ResourceId id);

    public abstract Builder poolId(PoolId poolId);

    public abstract Builder state(ResourceState state);

    public abstract Builder cloudResourceUid(CloudResourceUid cloudResourceUid);

    public abstract Builder requestHandoutId(RequestHandoutId requestHandoutId);

    public abstract Builder creation(Instant creation);

    public abstract Builder handoutTime(Instant handoutTime);

    public abstract Resource build();
  }
}
