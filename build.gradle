import org.gradle.api.tasks.testing.logging.TestExceptionFormat

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.google.cloud.tools.jib' version '2.5.0'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'de.undercouch.download' version '4.0.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'bio.terra'
version = System.getenv('SERVICE_VERSION') != null ? System.getenv('SERVICE_VERSION') : '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.webjars', name: 'swagger-ui', version: '3.25.4' // if updating, change path in ApiResourceConfig.java
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.12'
    implementation group: 'org.liquibase' , name: 'liquibase-core', version: '3.10.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-jdbc:5.1.9.RELEASE'

    implementation 'com.google.guava:guava:29.0-jre'

    // -- Swagger CodeGen dependencies --
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.20'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.4'
    // TODO: this version of swagger-annotations is old, but the code gen is still relying on it
    // There is an open bug tracking the fix: https://github.com/OpenAPITools/openapi-generator/issues/4245
    implementation 'io.swagger:swagger-annotations:1.6.0'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.2'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: '2.11.2'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

// Exclude the Spring logger, so everything will use SLF4J
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

java {
    withJavadocJar()
}

// Linter
spotless {
    java {
        googleJavaFormat()
    }
}


// OpenAPI Server Generation
// - define dependencies to include the generated code
def openapiServerSourceDir = "${projectDir}/src/main/resources/api"
def openapiResourceSourceDir = "${projectDir}/src/main/config"
def openapiTargetDir = "${buildDir}/generated"
swaggerSources {
    server {
        inputFile = file("${openapiServerSourceDir}/service_openapi.yaml")
        code {
            language = "spring"
            outputDir = file("${openapiTargetDir}")
            components = ["models", "apis"]
            wipeOutputDir = false
            rawOptions = [
                    "--api-package", "${this.group}.rbs.generated.controller",
                    "--model-package", "${this.group}.rbs.generated.model",
                    "--library", "spring-boot",
                    "-D", "interfaceOnly=true," +
                            "useTags=true," +
                            "dateLibrary=java8"
            ]
        }
    }

    resource {
        inputFile = file("${openapiResourceSourceDir}/resource_schema.yaml")
        code {
            language = "spring"
            outputDir = file("${openapiTargetDir}")
            components = ["models"]
            wipeOutputDir = false
            rawOptions = [
                    "--model-package", "${this.group}.rbs.generated.model",
                    "--library", "spring-boot",
                    "-D", "interfaceOnly=true," +
                            "useTags=true," +
                            "dateLibrary=java8"
            ]
        }
    }
}

// Note: Spotless deletes the classes OpenApi generates.
// The order needs to be spotlessApply -> openApiGenerate -> build/test/run

swaggerSources.server.code.dependsOn swaggerSources.resource.code.dependsOn, tasks.spotlessApply
compileJava.dependsOn swaggerSources.server.code, swaggerSources.resource.code, spotlessApply
ideaModule.dependsOn swaggerSources.server.code
sourceSets {
    main {
        java {
            srcDir "${openapiTargetDir}/src/main/java"
        }
    }
    test {
        // Allow unit tests to directly load config files.
        resources {
            srcDir "config/"
        }
    }
}

tasks.withType(Test) {
    testLogging {
        events = ["passed", "failed", "skipped"]
        // Causes the correct line to be reported on an exception.
        exceptionFormat = TestExceptionFormat.FULL
        reports {
            // Write XML file (used by CircleCI, Jenkins, etc) to build/test-results/*
            junitXml.enabled = true
            // Write human-readable test report to build/reports/tests/*
            html.enabled = true
        }
    }
}

test {
    useJUnitPlatform {
        includeTags 'unit', 'integration'
    }
}

task unitTest(type: Test) {
    useJUnitPlatform {
        includeTags 'unit'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    // Force tests to always be re-run, since integration tests involve communicating with external
    // resources.
    outputs.upToDateWhen { false }
}
